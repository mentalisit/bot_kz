syntax = "proto3";

package wa;
option go_package = "/grpc_server;wa";

service WhatsappService {
  rpc DeleteMessage(DeleteMessageRequest) returns (ErrorResponse);
  rpc DeleteMessageSecond(DeleteMessageSecondRequest) returns (ErrorResponse);
  rpc EditMessage(EditMessageRequest) returns (ErrorResponse);
  rpc EditMessageTextKey(EditMessageTextKeyRequest) returns (ErrorResponse);
  rpc CheckAdmin(CheckAdminRequest) returns (FlagResponse);
  rpc GetAvatarUrl(GetAvatarUrlRequest) returns (TextResponse);
  rpc Send(SendMessageRequest) returns (TextResponse);
  rpc SendPoll(SendPollRequest) returns (TextResponse);
  rpc SendChannelDelSecond(SendMessageRequest) returns (FlagResponse);
  rpc SendHelp(SendHelpRequest) returns (TextResponse);
  rpc SendEmbedText(SendEmbedRequest) returns (IntResponse);
  rpc SendEmbedTime(SendMessageRequest) returns (IntResponse);
  rpc SendChannelTyping(SendChannelTypingRequest) returns (Empty);
  rpc SendPic(SendPicRequest) returns (ErrorResponse);
  rpc SendBridgeArrayMessages(SendBridgeArrayMessagesRequest) returns (SendBridgeArrayMessagesResponse);
  rpc SendPicScoreboard(ScoreboardRequest) returns (ScoreboardResponse);
}

message TextResponse {
  string text = 1;
}
message ErrorResponse {
  string error_message = 1;
}
message FlagResponse{
  bool flag = 1;
}
message DeleteMessageRequest {
  string chatid = 1;
  string mesid = 2;
}
message DeleteMessageSecondRequest {
  string chatid = 1;
  string mesid = 2;
  int32 second = 3;
}
message EditMessageRequest{
  string textEdit = 1;
  string chatID = 2;
  string mID = 3;
  string parseMode = 4;
}
message EditMessageTextKeyRequest{
  string chatId = 1;
  int32 editMesId = 2;
  string textEdit = 3;
  string lvlkz = 4;
}
message CheckAdminRequest {
  string name = 1;
  string chatid = 2;
}
message GetAvatarUrlRequest {
  string userid = 1;
}
message SendPollRequest {
  map<string, string> data = 1;
  repeated string options = 2;
}
message SendMessageRequest{
  string text = 1;
  string chatID = 2;
  string parseMode = 3;
  int32 second = 4;
}
message SendEmbedRequest {
  string chatId = 1;
  string text = 2;
  string level = 3;
}
message SendHelpRequest {
  string chatId = 1;
  string text = 2;
  string oldMidHelps = 3;
  bool ifUser = 4;
}
message IntResponse {
  int32 result = 1;
}
message SendChannelTypingRequest {
  string ChannelID = 1;
}
message SendPicRequest {
  string chatid = 1;
  string text = 2;
  bytes imageBytes = 3;
}
message SendBridgeArrayMessagesRequest {
  string text = 1;
  string username = 2;
  repeated string channelID = 3;
  repeated FileInfo extra = 4;
  string avatar = 5;
  map<string, string> reply_map= 6;
  BridgeMessageReply reply = 7;
}
message FileInfo {
  string name = 1;
  bytes data = 2;
  string url = 3;
  int64 size = 4;
  string fileID = 5;
}
message BridgeMessageReply {
  int64 time_message = 1;
  string text = 2;
  string avatar = 3;
  string userName = 4;
}
message SendBridgeArrayMessagesResponse {
  repeated MessageIds message_ids = 1;
}
message MessageIds {
  string message_id = 1;
  string chat_id = 2;
}
message Empty {}

message ScoreboardRequest {
  string ChaatId = 1;
  string text = 2;
  string fileNameScoreboard = 3;
}
message ScoreboardResponse {
  string Mid = 1;
  string error_message = 2;
}

