syntax = "proto3";

package bridge;
option go_package = "grpc-server;bridge";


// Сообщение Bridge2Configs соответствует структуре Bridge2Configs
message Bridge2Configs {
  string channel_id = 1;
  string guild_id = 2;
  string corp_channel_name = 3;
  string alias_name = 4;
  map<string, string> mapping_roles = 5;
}

// Сообщение Bridge2Config соответствует структуре Bridge2Config
message Bridge2Config {
  int32 id = 1; // Используем int32 или int64 для целых чисел
  string name_relay = 2;
  string host_relay = 3;
  repeated string role = 4; // Слайсы (Go slice) становятся repeated полями
  message Bridge2ConfigsList {
    repeated Bridge2Configs configs = 1;
  }
  map<string, Bridge2ConfigsList> channel = 5; // Вложенный map с помощью вспомогательной структуры
  repeated string forbidden_prefixes = 6;
}



// Сообщение для FileInfo
message FileInfo {
  string name = 1;
  bytes data = 2;
  string url = 3;
  int64 size = 4;
  string file_id = 5;
}

// Сообщение для BridgeMessageReply
message BridgeMessageReply {
  int64 time_message = 1;
  string text = 2;
  string avatar = 3;
  string user_name = 4;
}

// Сообщение для BridgeConfigDs
message BridgeConfigDs {
  string channel_id = 1;
  string guild_id = 2;
  string corp_channel_name = 3;
  string alias_name = 4;
  map<string, string> mapping_roles = 5;
}

// Сообщение для BridgeConfigTg
message BridgeConfigTg {
  string channel_id = 1;
  string corp_channel_name = 2;
  string alias_name = 3;
  map<string, string> mapping_roles = 4;
}

// Сообщение для BridgeConfig
message BridgeConfig {
  int32 id = 1;
  string name_relay = 2;
  string host_relay = 3;
  repeated string role = 4;
  repeated BridgeConfigDs channel_ds = 5;
  repeated BridgeConfigTg channel_tg = 6;
  repeated string forbidden_prefixes = 7;
}

// Основное сообщение для передачи данных в мост
message ToBridgeMessage {
  string text = 1;
  string sender = 2;
  string tip = 3;
  string chat_id = 4;
  string mes_id = 5;
  string guild_id = 6;
  int64 time_message = 7;
  repeated FileInfo extra = 8;
  string avatar = 9;
  BridgeMessageReply reply = 10;
  map<string, string> reply_map = 11;
  Bridge2Config config = 12;
}

// Сервис для функции InboxBridge
service BridgeService {
  rpc InboxBridge(ToBridgeMessage) returns (Empty);
}

// Пустое сообщение для ответов, не требующих данных
message Empty {}
